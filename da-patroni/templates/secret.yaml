{{- $skipSecret := .Values.skipSecret -}}
{{ if not $skipSecret }}
# PG secret starts
{{- $pgAdminUser := or .Values.pgAdminUser (.Files.Get "secrets/PG_ADMIN_USER.secret") -}}
{{- $pgHost := or .Values.pgHost (.Files.Get "secrets/PG_HOST.secret") -}}
{{- $pgHostRO := or .Values.pgHostRO (.Files.Get "secrets/PG_HOST_RO.secret") -}}
{{- $pgPass := or .Values.pgPass (.Files.Get (printf "secrets/PG_PASS.%s.secret" .Values.deployEnv)) -}}
{{- $pgPassRO := or .Values.pgPassRO (.Files.Get (printf "secrets/PG_PASS_RO.%s.secret" .Values.deployEnv)) -}}
{{- $pgPassTeam := or .Values.pgPassTeam (.Files.Get (printf "secrets/PG_PASS_TEAM.%s.secret" .Values.deployEnv)) -}}
{{- $pgPassRep := or .Values.pgPassRep (.Files.Get (printf "secrets/PG_PASS_REP.%s.secret" .Values.deployEnv)) -}}
{{- $pgPort := or .Values.pgPort (.Files.Get "secrets/PG_PORT.secret") -}}
{{ if and $pgAdminUser $pgHost $pgHostRO $pgPass $pgPassRO $pgPassTeam $pgPassRep $pgPort }}
---
apiVersion: v1
data:
  PG_ADMIN_USER.secret: {{ $pgAdminUser | b64enc }}
  PG_HOST.secret: {{ $pgHost | b64enc }}
  PG_HOST_RO.secret: {{ $pgHostRO | b64enc }}
  PG_PASS.secret: {{ $pgPass | b64enc }}
  PG_PASS_RO.secret: {{ $pgPassRO | b64enc }}
  PG_PASS_TEAM.secret: {{ $pgPassTeam | b64enc }}
  PG_PASS_REP.secret: {{ $pgPassRep | b64enc }}
  PG_PORT.secret: {{ $pgPort | b64enc }}
kind: Secret
metadata:
  namespace: '{{ .Values.namespace }}'
  name: {{ .Values.pgSecret }}
  labels:
    name: devstats
    type: 'secret'
type: {{ .Values.secretType }}
{{ else }}
missing_pg_secret: "Please take a look at the NOTES.txt file"
{{ end }}
# PG secret ends
{{ end }}
