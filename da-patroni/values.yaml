# ARTWORK
# Secrets that can be set via files in `./secrets/*.secret`, via command line by `--set 'pgAdminUser=xyz,pgHost=host.com,...'` or even uncomment them in the lines below.
# pgAdminUser: ''
# pgHost: ''
# pgHostRO: ''
# pgPass: ''
# pgPassRO: ''
# pgPassTeam: ''
# pgPassRep: ''
#
# You can skip some parts of the deployment (useful when deploying partailly again)
# skipSecret (will not attempt to create PG secret
# skipPostgres (will not attempt to create patroni postgres)
# skipBackupsPV (will not attempt to create backups PV)
# skipBackups (will not attempt to create backups cronjob)
# skipNamespace (will skip creating devstats namespace)
#
# skipSecret: 1
# skipPostgres: 1
# skipBackupsPV: 1
# skipBackups: 1
# skipNamespace: 1
#
# Other evrironment options
# backupsImage: 'lukaszgryglicki/devstats-prod'
# backupsOnlyDBs: 'kubernetes prometheus fluentd'
# backupsCommand: 'backup.sh'
# backupsCommandsArgs:
#   - "backupsarg"
# debug: 1
# overwritePostgresCommand: true
# postgresCommand: 'sleep'
# postgresCommandArgs:
#   - "36000"
# postgresImageName: 'jberkus/simple-patroni:v3'
# postgresImageName: 'lukaszgryglicki/devstats-patroni'
# postgresImageName: 'lukaszgryglicki/devstats-patroni-new'
# storageAccessModes: ReadWriteMany
# storageClass: efs
# storageClass: gp2
# storageClass: openebs-hostpath
# storageClass: nfs-openebs-localstorage
# storageClass: local-storage
# Backup into different node-group.
backupsNodeSelector:
  lfda: elastic
dbNodeSelector:
  lfda: devstats
backupsCron: '45 3 * * *'
backupsCronHistoryLimit: 2
backupsCommand: 'backup.sh'
backupsOnlyDBs: ''
backupsImage: 'lukaszgryglicki/devstats-test'
backupsPodName: 'devstats-backups'
backupsPVName: 'devstats-backups'
backupsPVSize: '160Gi'
backupsRestartPolicy: Never
#backupsStorageAccessModes: ReadWriteOnce
backupsStorageAccessModes: ReadWriteMany
# backupsStorageClass: 'local-storage'
backupsStorageClass: 'nfs-openebs-localstorage'
concurrencyPolicy: Forbid
fullnameOverride: 'da-patroni'
imagePullPolicy: Always
limitsBackupsCPU: '2000m'
limitsBackupsMemory: '2Gi'
limitsPostgresCPU: '6000m'
limitsPostgresMemory: '48Gi'
name: 'da-patroni'
namespace: 'devstats'
nameOverride: 'da-patroni'
patroniLoopWait: 15
patroniTtl: 60
patroniRetryTimeout: 60
patroniMasterStartTimeout: 600
patroniMaximumLagOnFailover: 5368709120
pgSecret: pg-db
postgresSvcName: 'devstats-postgres'
postgresImageName: 'lukaszgryglicki/devstats-patroni-new'
postgresStorageSize: '1800Gi'
postgresNodes: 3
postgresSharedBuffers: '16GB'
postgresMaxConn: 128
postgresMaxParallelWorkersPerGather: 3
postgresMaxWorkerProcesses: 6
postgresMaxParallelWorkers: 6
postgresWorkMem: '512MB'
postgresWalBuffers: '128MB'
postgresMaxTempFile: '32GB'
postgresUseSlots: true
postgresHotStandby: 'on'
postgresWalLogHints: 'on'
postgresWalKeepSegments: 10
postgresWalLevel: 'hot_standby'
postgresMaxWalSenders: 5
postgresMaxReplicationSlots: 5
requestsBackupsCPU: '200m'
requestsBackupsMemory: '512Mi'
requestsPostgresCPU: '4000m'
requestsPostgresMemory: '16Gi'
secretType: Opaque
storageAccessModes: ReadWriteOnce
storageClass: openebs-hostpath
volumeMountName: data-backups
volumeMountPath: '/root'
volumeName: data-backups
useBackupsResourcesLimits: 1
usePostgresResourcesLimits: 1
